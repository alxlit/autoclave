(ns autoclave.json_test
  "Taken from the OWASP JSON Sanitizer test suite."
  (:require [autoclave.core :refer :all]
            [clojure.test :refer [deftest is]]))

(deftest test-it-works
  (is (= (json-sanitize "") "null" ))
  (is (= (json-sanitize "null") "null" ))
  (is (= (json-sanitize "false") "false"))
  (is (= (json-sanitize "true") "true"))
  (is (= (json-sanitize " false ") " false "))
  (is (= (json-sanitize "  false") "  false"))
  (is (= (json-sanitize "false,true") "false"))
  (is (= (json-sanitize "\"foo\"") "\"foo\""))
  (is (= (json-sanitize "'foo'") "\"foo\""))
  (is (= (json-sanitize "\"<script>foo()</script>\"")
                        "\"<script>foo()<\\/script>\""))
  (is (= (json-sanitize "\"<script>foo()</script>\"")
                        "\"<script>foo()<\\/script>\""))
  (is (= (json-sanitize "\"</SCRIPT\n>\"") "\"<\\/SCRIPT\\n>\""))
  (is (= (json-sanitize "\"</ScRIpT\"") "\"<\\/ScRIpT\""))

  ; \u0130 is a Turkish dotted upper-case 'I' so the lower case version of
  ; the tag name is "script".
  (is (= (json-sanitize "\"</ScR\u0130pT\"") "\"<\\/ScR\u0130pT\""))

  (is (= (json-sanitize "\"<b>Hello</b>\"") "\"<b>Hello</b>\""))
  (is (= (json-sanitize "\"<s>Hello</s>\"") "\"<s>Hello</s>\""))
  (is (= (json-sanitize "'<[[]]>'") "\"<[[\\u005d]>\""))
  (is (= (json-sanitize "']]>'") "\"\\u005d]>\""))
  (is (= (json-sanitize "[[0]]>") "[[0]]"))
  (is (= (json-sanitize "[1,-1,0.0,-0.5,1e2,") "[1,-1,0.0,-0.5,1e2]"))
  (is (= (json-sanitize "[1,2,3,]") "[1,2,3]"))
  (is (= (json-sanitize "[1,,3,]") "[1,null,3]"))
  (is (= (json-sanitize "[1 2 3]") "[1 ,2 ,3]"))
  (is (= (json-sanitize "{ \"foo\": \"bar\" }") "{ \"foo\": \"bar\" }"))
  (is (= (json-sanitize "{ \"foo\": \"bar\" }") "{ \"foo\": \"bar\" }"))
  (is (= (json-sanitize "{\"foo\",\"bar\"}") "{\"foo\":\"bar\"}"))
  (is (= (json-sanitize "{ foo: \"bar\" }") "{ \"foo\": \"bar\" }"))
  (is (= (json-sanitize "{ foo: 'bar") "{ \"foo\": \"bar\"}"))
  (is (= (json-sanitize "{ foo: ['bar") "{ \"foo\": [\"bar\"]}"))
  (is (= (json-sanitize "// comment\nfalse") "false"))
  (is (= (json-sanitize "false// comment") "false"))
  (is (= (json-sanitize "false// comment\n") "false"))
  (is (= (json-sanitize "false/* comment */") "false"))
  (is (= (json-sanitize "false/* comment *") "false"))
  (is (= (json-sanitize "false/* comment ") "false"))
  (is (= (json-sanitize "/*/true**/false") "false"))
  (is (= (json-sanitize "1") "1"))
  (is (= (json-sanitize "-1") "-1"))
  (is (= (json-sanitize "1.0") "1.0"))
  (is (= (json-sanitize "-1.0") "-1.0"))
  (is (= (json-sanitize "1.05") "1.05"))
  (is (= (json-sanitize "427.0953333") "427.0953333"))
  (is (= (json-sanitize "6.0221412927e+23") "6.0221412927e+23"))
  (is (= (json-sanitize "6.0221412927e23") "6.0221412927e23"))
  (is (= (json-sanitize "6.0221412927e") "6.0221412927e0"))
  (is (= (json-sanitize "6.0221412927e-") "6.0221412927e-0"))
  (is (= (json-sanitize "6.0221412927e+") "6.0221412927e+0"))
  (is (= (json-sanitize "1.660538920287695E-24") "1.660538920287695E-24"))
  (is (= (json-sanitize "-6.02e-23") "-6.02e-23"))
  (is (= (json-sanitize "1.") "1.0"))
  (is (= (json-sanitize ".5") "0.5"))
  (is (= (json-sanitize  "-.5") "-0.5"))
  (is (= (json-sanitize "+.5") "0.5"))
  (is (= (json-sanitize "+.5e2") "0.5e2"))
  (is (= (json-sanitize "+1.5e+2") "1.5e+2"))
  (is (= (json-sanitize "+.5e-2") "0.5e-2"))
  (is (= (json-sanitize "{0:0}") "{\"0\":0}"))
  (is (= (json-sanitize "{-0:0}") "{\"0\":0}"))
  (is (= (json-sanitize "{+0:0}") "{\"0\":0}"))
  (is (= (json-sanitize "{1.0:0}") "{\"1\":0}"))
  (is (= (json-sanitize "{1.:0}") "{\"1\":0}"))
  (is (= (json-sanitize "{.5:0}") "{\"0.5\":0}"))
  (is (= (json-sanitize "{-.5:0}") "{\"-0.5\":0}"))
  (is (= (json-sanitize "{+.5:0}") "{\"0.5\":0}"))
  (is (= (json-sanitize "{+.5e2:0}") "{\"50\":0}"))
  (is (= (json-sanitize "{+1.5e+2:0}") "{\"150\":0}"))
  (is (= (json-sanitize "{+.1:0}") "{\"0.1\":0}"))
  (is (= (json-sanitize "{+.01:0}") "{\"0.01\":0}"))
  (is (= (json-sanitize "{+.5e-2:0}") "{\"0.005\":0}"))
  (is (= (json-sanitize "{10e100:0}") "{\"1e+101\":0}"))
  (is (= (json-sanitize "{10e-100:0}") "{\"1e-99\":0}"))
  (is (= (json-sanitize "{10.5e-100:0}") "{\"1.05e-99\":0}"))
  (is (= (json-sanitize "{10.500e-100:0}") "{\"1.05e-99\":0}"))
  (is (= (json-sanitize "{12.34e100:0}") "{\"1.234e+101\":0}"))
  (is (= (json-sanitize "{.01234e-100:0}") "{\"1.234e-102\":0}"))
  (is (= (json-sanitize "{.01234e-100:0}") "{\"1.234e-102\":0}"))
  (is (= (json-sanitize "{}") "{}"))

  ; Remove grouping parentheses.
  (is (= (json-sanitize "({})") "{}"))

  ; Escape code-points and isolated surrogates which are not XML embeddable.
  (is (= (json-sanitize "'\u0000\u0008\u001f'") "\"\\u0000\\u0008\\u001f\""))
  (is (= (json-sanitize "'\ud800\udc00\udc00\ud800'")
                        "\"\ud800\udc00\\udc00\\ud800\""))
  (is (= (json-sanitize "'\ufffd\ufffe\uffff'") "\"\ufffd\\ufffe\\uffff\""))

  ; These control characters should be elided if they appear outside a string
  ; literal.
  (is (= (json-sanitize "\uffef\u000042\u0008\ud800\uffff\udc00") "42"))
  (is (= (json-sanitize "\uffef\u0000\u0008\ud800\uffff\udc00") "null")))
